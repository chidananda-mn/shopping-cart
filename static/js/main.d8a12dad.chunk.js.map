{"version":3,"sources":["Item/Item.style.ts","Item/Item.tsx","Cart/Cart.styles.ts","CartItem/CartItem.style.ts","CartItem/CartItem.tsx","Cart/Cart.tsx","App.styles.ts","App.tsx","index.tsx"],"names":["Wrapper","styled","div","Item","item","handleAddToCart","src","image","alt","title","description","price","Button","onClick","aside","CartItem","addToCart","removeFromCart","className","amount","size","variant","id","Cart","items","cartItems","length","map","_item","reduce","acc","StyledButton","IconButton","getProducts","a","fetch","json","App","useState","cartOpen","setCartOpen","setCartItems","useQuery","data","isLoading","error","console","log","prevItem","find","_eachItem","LinearProgress","Drawer","anchor","open","onClose","Badge","badgeContent","color","Grid","container","spacing","xs","sm","client","QueryClient","ReactDOM","render","QueryClientProvider","document","getElementById"],"mappings":"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","file":"static/js/main.d8a12dad.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n\tdisplay: flex;\r\n\tjustify-content: space-between;\r\n\tflex-direction: column;\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tborder: 1px solid lightblue;\r\n\tborder-radius: 20px;\r\n\r\n\tbutton {\r\n\t\tborder-radius: 0 0 20px 20px;\r\n\t}\r\n\timg {\r\n\t\tmax-height: 250px;\r\n\t\tobject-fit: cover;\r\n\t\tborder-radius: 20px 20px 0 0;\r\n\t}\r\n\tdiv {\r\n\t\tfont-family: Arial;\r\n\t\tpadding: 1rem;\r\n\t\theight: 100%;\r\n\t}\r\n`;\r\n","import Button from '@material-ui/core/Button';\r\n\r\nimport { cartItemType } from '../types';\r\n\r\nimport { Wrapper } from './Item.style';\r\n\r\ntype Item = {\r\n\titem: cartItemType;\r\n\thandleAddToCart: (item: cartItemType) => void;\r\n};\r\n\r\nexport const Item: React.FC<Item> = ({ item, handleAddToCart }) => (\r\n\t<Wrapper>\r\n\t\t<img src={item.image} alt={item.title} />\r\n\t\t<div>\r\n\t\t\t<h3>{item.title}</h3>\r\n\t\t\t<p>{item.description}</p>\r\n\t\t\t<h3>${item.price}</h3>\r\n\t\t</div>\r\n\t\t<Button onClick={() => handleAddToCart(item)}>Add To Cart</Button>\r\n\t</Wrapper>\r\n);\r\n","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.aside`\r\n\tfont-family: Arial;\r\n\twidth: 500px;\r\n\tpadding: 20px;\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n\tdisplay: flex;\r\n\tjustify-content: space-between;\r\n\tborder-bottom: 1px solid black;\r\n\r\n\tpadding: 10px;\r\n\tdiv {\r\n\t\tflex: 1;\r\n\t}\r\n\t.information {\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: space-between;\r\n\t}\r\n\t.buttons {\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: space-between;\r\n\t}\r\n\timg {\r\n\t\twidth: 25%;\r\n\t\tmargin-left: 20px;\r\n\t}\r\n`;\r\n","import Button from '@material-ui/core/Button';\r\n//Types\r\nimport { cartItemType } from '../types';\r\n//styles\r\n\r\nimport { Wrapper } from './CartItem.style';\r\n\r\ntype CartItem = {\r\n\titem: cartItemType;\r\n\taddToCart: (item: cartItemType) => void;\r\n\tremoveFromCart: (id: number) => void;\r\n};\r\n\r\nexport const CartItem: React.FC<CartItem> = ({ item, addToCart, removeFromCart }) => (\r\n\t<Wrapper>\r\n\t\t<div>\r\n\t\t\t<h3>{item.title}</h3>\r\n\t\t\t<div className=\"information\">\r\n\t\t\t\t<p>Price:${item.price}</p>\r\n\t\t\t\t<p>Total: ${item.amount * item.price}</p>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"buttons\">\r\n\t\t\t\t<Button size=\"small\" variant=\"contained\" onClick={() => removeFromCart(item.id)}>\r\n\t\t\t\t\t-\r\n\t\t\t\t</Button>\r\n\t\t\t\t<p>{item.amount}</p>\r\n\t\t\t\t<Button size=\"small\" variant=\"contained\" onClick={() => addToCart(item)}>\r\n\t\t\t\t\t+\r\n\t\t\t\t</Button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t<img src={item.image} alt={item.title} />\r\n\t</Wrapper>\r\n);\r\n","import { Wrapper } from './Cart.styles';\r\nimport { CartItem } from '../CartItem/CartItem';\r\nimport { cartItemType } from '../types';\r\n\r\ntype Cart = {\r\n\tcartItems: cartItemType[];\r\n\taddToCart: (item: cartItemType) => void;\r\n\tremoveFromCart: (id: number) => void;\r\n};\r\n\r\nexport const Cart: React.FC<Cart> = ({ cartItems, addToCart, removeFromCart }) => {\r\n\tconst calculateTotalItems = (items: cartItemType[]) =>\r\n\t\titems.reduce((acc: number, item) => acc + item.amount * item.price, 0);\r\n\treturn (\r\n\t\t<Wrapper>\r\n\t\t\t<h2>shopping cart</h2>\r\n\t\t\t{cartItems.length === 0 ? <p>No items in cart</p> : null}\r\n\t\t\t{cartItems.map((_item) => (\r\n\t\t\t\t<CartItem key={_item.id} item={_item} addToCart={addToCart} removeFromCart={removeFromCart} />\r\n\t\t\t))}\r\n\t\t\t<h2>Total:${calculateTotalItems(cartItems)}</h2>\r\n\t\t</Wrapper>\r\n\t);\r\n};\r\n","import styled from 'styled-components';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nexport const Wrapper = styled.div`margin: 40px;`;\r\n\r\nexport const StyledButton = styled(IconButton)`\r\nposition:fixed;\r\nz-index:100;\r\nright:20px;\r\ntop:10px;\r\n`;\r\n","import { useState } from 'react';\nimport { useQuery } from 'react-query';\n\n//components\nimport Drawer from '@material-ui/core/Drawer';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Grid from '@material-ui/core/Grid';\nimport AddShoppingCartIcon from '@material-ui/icons/AddShoppingCart';\nimport Badge from '@material-ui/core/Badge';\nimport { Item } from './Item/Item';\nimport {Cart} from './Cart/Cart';\n//styles\nimport { Wrapper,StyledButton } from './App.styles';\nimport { cartItemType } from './types';\n\nconst getProducts = async (): Promise<cartItemType[]> =>\n\tawait (await fetch('https://fakestoreapi.com/products')).json();\n\nconst App = () => {\n\tconst [cartOpen,setCartOpen] = useState(false);\n\tconst [cartItems,setCartItems] = useState([] as cartItemType[])\n\tconst { data, isLoading, error } = useQuery<cartItemType[]>('products', getProducts);\n\tconsole.log('--data--', isLoading, data);\n\n\tconst getTotalItems = (items: cartItemType[]) => items.reduce((acc:number,_eachItem)=>acc+_eachItem.amount,0);\n\tconst handleAddToCart = (item: cartItemType) => {\n\t\tsetCartItems((prevItem)=> {\n\t\t\t\t//is Item already exist in the cart\n\t\t\tconst isItemInCart = prevItem.find((_eachItem) => _eachItem.id === item.id) \n\t\t\tif (isItemInCart) {\n\t\t\t\treturn prevItem.map((_item) => _item.id === item.id ? {..._item,amount:_item.amount+1}:_item)\n\t\t\t}\n\t\t\t//first time item is added\n\t\t\treturn [...prevItem,{...item,amount:1}]\n\t\t})\n\t};\n\tconst handleRemoveFromCart = (id: number) => {\n\t\tsetCartItems((prevItem)=> {\n\t\t\treturn prevItem.reduce((acc,_item)=>{\n\t\t\t\tif (_item.id===id) {\n\t\t\t\t\tif (_item.amount===1) return acc;\n\t\t\t\t\treturn [...acc,{..._item,amount:_item.amount-1}]\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\treturn [...acc, _item]\n\t\t\t\t}\n\t\t\t},[] as cartItemType[])\n\n\t\t})\n\t};\n\n\tif (isLoading) return <LinearProgress />;\n\tif (error) return <div> someting wrong here </div>;\n\treturn (\n\t\t<Wrapper>\n\t\t\t<Drawer anchor=\"right\" open={cartOpen} onClose={()=> setCartOpen(false)}>\n\t\t\t\n\t\t\t<Cart cartItems={cartItems} addToCart={handleAddToCart} removeFromCart={handleRemoveFromCart} />\n\t\t\t</Drawer>\n\t\t\t<StyledButton onClick={() => setCartOpen(true)}>\n\t\t\t\t<Badge badgeContent={getTotalItems(cartItems)} color=\"error\"> \n\t\t\t\t <AddShoppingCartIcon />\n\t\t\t\t</Badge>\n\t\t\t</StyledButton>\n\t\t\t<Grid container spacing={3}>\n\t\t\t\t{data?.map((_eachItem) => (<Grid item  key={_eachItem.id} xs={12} sm={4}> <Item item={_eachItem} handleAddToCart={handleAddToCart} /></Grid>))}\n\t\t\t</Grid>\n\t\t\t\n\t\t</Wrapper>\n\t);\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\nimport { QueryClient, QueryClientProvider } from 'react-query';\n\nconst client = new QueryClient();\nReactDOM.render(\n\t<QueryClientProvider client={client}>\n\t\t<App />\n\t</QueryClientProvider>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}