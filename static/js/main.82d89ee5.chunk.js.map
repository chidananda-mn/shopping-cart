{"version":3,"sources":["Item/Item.style.ts","Item/Item.tsx","App.styles.ts","App.tsx","index.tsx"],"names":["Wrapper","styled","div","Item","item","handleAddToCart","src","image","alt","title","description","price","Button","onClick","getProducts","a","fetch","json","App","useQuery","data","isLoading","error","console","log","LinearProgress","Grid","container","spacing","map","_eachItem","xs","sm","id","client","QueryClient","ReactDOM","render","QueryClientProvider","document","getElementById"],"mappings":"srBAEO,IAAMA,EAAUC,IAAOC,IAAV,KCSPC,EAAuB,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,gBAAT,OACnC,eAACL,EAAD,WACC,qBAAKM,IAAKF,EAAKG,MAAOC,IAAKJ,EAAKK,QAChC,gCACC,6BAAKL,EAAKK,QACV,4BAAIL,EAAKM,cACT,mCAAMN,EAAKO,YAEZ,cAACC,EAAA,EAAD,CAAQC,QAAS,kBAAMR,EAAgBD,IAAvC,6B,qECjBK,IAAMJ,EAAUC,IAAOC,IAAV,KCadY,EAAW,uCAAG,sBAAAC,EAAA,sEACNC,MAAM,qCADA,8BACsCC,OADtC,mFAAH,qDAoBFC,EAjBH,WAAO,IAAD,EACkBC,YAAyB,WAAYL,GAAhEM,EADS,EACTA,KAAMC,EADG,EACHA,UAAWC,EADR,EACQA,MACzBC,QAAQC,IAAI,WAAYH,EAAWD,GACnC,IACMf,EAAkB,SAACD,GAAD,OAAwB,MAEhD,OAAIiB,EAAkB,cAACI,EAAA,EAAD,IAClBH,EAAc,wDAEjB,cAAC,EAAD,UACC,cAACI,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,gBACER,QADF,IACEA,OADF,EACEA,EAAMS,KAAI,SAACC,GAAD,OAAgB,eAACJ,EAAA,EAAD,CAAMtB,MAAI,EAAqB2B,GAAI,GAAIC,GAAI,EAA3C,cAA+C,cAAC,EAAD,CAAM5B,KAAM0B,EAAWzB,gBAAiBA,MAAtEyB,EAAUG,Y,gBCzBpDC,EAAS,IAAIC,IACnBC,IAASC,OACR,cAACC,EAAA,EAAD,CAAqBJ,OAAQA,EAA7B,SACC,cAAC,EAAD,MAEDK,SAASC,eAAe,W","file":"static/js/main.82d89ee5.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n\tdisplay: flex;\r\n\tjustify-content: space-between;\r\n\tflex-direction: column;\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tborder: 1px solid lightblue;\r\n\tborder-radius: 20px;\r\n\r\n\tbutton {\r\n\t\tborder-radius: 0 0 20px 20px;\r\n\t}\r\n\timg {\r\n\t\tmax-height: 250px;\r\n\t\tobject-fit: cover;\r\n\t\tborder-radius: 20px 20px 0 0;\r\n\t}\r\n\tdiv {\r\n\t\tfont-family: Arial;\r\n\t\tpadding: 1rem;\r\n\t\theight: 100%;\r\n\t}\r\n`;\r\n","import Button from '@material-ui/core/Button';\r\n\r\nimport { cartItemType } from '../types';\r\n\r\nimport { Wrapper } from './Item.style';\r\n\r\ntype Item = {\r\n\titem: cartItemType;\r\n\thandleAddToCart: (item: cartItemType) => void;\r\n};\r\n\r\nexport const Item: React.FC<Item> = ({ item, handleAddToCart }) => (\r\n\t<Wrapper>\r\n\t\t<img src={item.image} alt={item.title} />\r\n\t\t<div>\r\n\t\t\t<h3>{item.title}</h3>\r\n\t\t\t<p>{item.description}</p>\r\n\t\t\t<h3>${item.price}</h3>\r\n\t\t</div>\r\n\t\t<Button onClick={() => handleAddToCart(item)}>Add To Cart</Button>\r\n\t</Wrapper>\r\n);\r\n","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div``;\r\n","import { useState } from 'react';\nimport { useQuery } from 'react-query';\n\n//components\nimport Drawer from '@material-ui/core/Drawer';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Grid from '@material-ui/core/Grid';\nimport AddShoppingCartIcon from '@material-ui/icons/AddShoppingCart';\nimport Badge from '@material-ui/core/Badge';\nimport { Item } from './Item/Item';\n\n//styles\nimport { Wrapper } from './App.styles';\nimport { cartItemType } from './types';\n\nconst getProducts = async (): Promise<cartItemType[]> =>\n\tawait (await fetch('https://fakestoreapi.com/products')).json();\n\nconst App = () => {\n\tconst { data, isLoading, error } = useQuery<cartItemType[]>('products', getProducts);\n\tconsole.log('--data--', isLoading, data);\n\tconst getTotalItems = () => null;\n\tconst handleAddToCart = (item: cartItemType) => null;\n\tconst handleRemoveFromCart = () => null;\n\tif (isLoading) return <LinearProgress />;\n\tif (error) return <div> someting wrong here </div>;\n\treturn (\n\t\t<Wrapper>\n\t\t\t<Grid container spacing={3}>\n\t\t\t\t{data?.map((_eachItem) => (<Grid item  key={_eachItem.id} xs={12} sm={4}> <Item item={_eachItem} handleAddToCart={handleAddToCart} /></Grid>))}\n\t\t\t</Grid>\n\t\t</Wrapper>\n\t);\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\nimport { QueryClient, QueryClientProvider } from 'react-query';\n\nconst client = new QueryClient();\nReactDOM.render(\n\t<QueryClientProvider client={client}>\n\t\t<App />\n\t</QueryClientProvider>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}